name: Deploy Travel Planner to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create config.js with API key
        run: |
          cat > config.js << 'EOF'
          // Configuration file for Travel Planner
          // This file is automatically generated during GitHub Actions deployment
          
          const CONFIG = {
              // LocationIQ API key for geocoding services
              LOCATIONIQ_API_KEY: '${{ secrets.LOCATIONIQ_API_KEY }}',
              
              // Default map center coordinates (New York City)
              DEFAULT_MAP_CENTER: {
                  lat: 40.7128,
                  lng: -74.0060
              },
              
              // Default zoom level
              DEFAULT_ZOOM: 13
          };
          
          // Make config available globally
          window.CONFIG = CONFIG;
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
